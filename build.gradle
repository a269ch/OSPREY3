plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

group 'edu.duke.cs'
version '3.1-BETA'

sourceCompatibility = 11

repositories {
    mavenCentral()
}

def autoValueVersion = 1.7

dependencies {
    implementation 'org.apache.commons:commons-collections4:4.3'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'colt:colt:1.2.0'
    implementation 'com.joptimizer:joptimizer:3.5.1'
    implementation 'commons-io:commons-io:2.5'
    implementation 'org.mapdb:mapdb:3.0.5'
    implementation 'de.lmu.ifi.dbs.elki:elki:0.7.1'
    implementation 'ch.obermuhlner:big-math:2.3.0'
    implementation 'org.jogamp.jocl:jocl:2.3.2'
    implementation 'org.jogamp.gluegen:gluegen-rt:2.3.2'
    implementation 'com.github.haifengl:smile-core:1.5.1'
    implementation 'com.github.haifengl:smile-netlib:1.5.1'
    implementation 'org.apache.xmlgraphics:batik-svggen:1.9.1'
    implementation 'org.apache.xmlgraphics:batik-svg-dom:1.9.1'
    implementation 'org.ojalgo:ojalgo:41.0.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.9'
    implementation 'com.beust:jcommander:1.72'
    implementation 'org.tomlj:tomlj:1.0.0'
    implementation 'org.joml:joml:1.9.19'
    implementation 'org.tukaani:xz:1.8'
    compile "com.google.auto.value:auto-value-annotations:${autoValueVersion}"
    annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"

    javafx {
        version = "11.0.1"
        modules = ['javafx.controls']
    }

    // JCUDA stuff, see https://github.com/jcuda/jcuda-main/blob/master/USAGE.md#using-jcuda-with-gradle
    implementation('org.jcuda:jcuda:0.8.0') {
            transitive = false
    }
    runtime 'org.jogamp.gluegen:gluegen-rt:2.3.2:natives-linux-amd64'
    runtime 'org.jogamp.jocl:jocl:2.3.2:natives-linux-amd64'
    runtime 'org.jcuda:jcuda-natives:0.8.0:linux-x86_64'

    compileOnly 'org.jetbrains:annotations:17.0.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.4.2'
}

test {
    useJUnitPlatform()
}

task compileGpu(type:Exec) {
    workingDir 'src/main/resources/gpuKernels/cuda'
    commandLine './compile.sh'
}

jar {
   manifest {
       attributes("Main-Class": "edu.duke.cs.osprey.design.Main")
   }
}
